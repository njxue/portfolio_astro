---
import Button from "./common/Button.astro";

const buttons = [
  { text: "Work", id: "workExperiences", icon: "briefcase.svg" },
  { text: "Projects", id: "projects", icon: "code.svg" },
  { text: "Coursework", id: "courseWork", icon: "graduation-hat.svg" },
];
---

<header
  class="flex flex-row justify-between p-5 border-b-2 border-gray-600 z-50 h-[70px] w-full top-0 fixed bg-snow dark:bg-[#121212] dark:text-white dark:border-gray-300"
>
  <div class="flex items-center gap-5">
    <h1 class="text-xl">Jing Xue</h1>
    <img
      src="/icons/moon.svg"
      class="w-5 cursor-pointer"
      id="toggleThemeButton"
      alt="toggleTheme"
    />
  </div>
  <div class="flex items-center gap-3 sm:gap-6" id="buttonsContainer">
    {
      buttons?.map((button) => (
        <Button text={button?.text} href={button?.id} icon={button?.icon} />
      ))
    }
  </div>
</header>

<script>
  import {
    Theme,
    setTheme,
    getTheme,
    EVENT_TOGGLE_THEME,
  } from "../utils/helpers";

  const html = document.getElementById("app");
  const toggleThemeBtn = document.getElementById("toggleThemeButton");

  toggleThemeBtn?.addEventListener("click", toggleTheme);

  function toggleTheme() {
    const currTheme = getTheme();
    const newTheme = currTheme === Theme.DARK ? Theme.LIGHT : Theme.DARK;

    // Set new theme
    setTheme(newTheme);
    if (currTheme === Theme.DARK) {
      html.classList.remove(Theme.DARK);
      toggleThemeBtn.setAttribute("src", "/icons/sun.svg");
    } else {
      html.classList.add(Theme.DARK);
      toggleThemeBtn.setAttribute("src", "/icons/moon.svg");
    }
    const customToggleThemeEvent = new CustomEvent(EVENT_TOGGLE_THEME, {
      detail: { theme: newTheme },
    });

    // Dispatch event to other listeners (e.g. theme-aware icons)
    window.dispatchEvent(customToggleThemeEvent);
  }
</script>
